# Based on https://www.nginx.com/resources/wiki/start/topics/examples/full/#nginx-conf
user              nginx nginx;  ## Default: nobody

worker_processes  auto;
error_log         "/dev/stderr";
pid               "/tmp/nginx.pid";

events {
    worker_connections  1024;
}



http {
    root /var/www/html;
    include       mime.types;
    default_type  application/octet-stream;
    log_format    main '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
    access_log    "/dev/stdout" main;
    add_header    X-Frame-Options SAMEORIGIN;

    client_body_temp_path  "/var/www/tmp/client_body" 1 2;
    proxy_temp_path        "/var/www/tmp/proxy" 1 2;
    fastcgi_temp_path      "/var/www/tmp/fastcgi" 1 2;
    scgi_temp_path         "/var/www/tmp/scgi" 1 2;
    uwsgi_temp_path        "/var/www/tmp/uwsgi" 1 2;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        off;
    gzip               on;
    gzip_http_version  1.0;
    gzip_comp_level    2;
    gzip_proxied       any;
    gzip_types         text/plain text/css application/javascript text/xml application/xml+rss;
    keepalive_timeout  65;
    ssl_protocols      TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers        HIGH:!aNULL:!MD5;
    client_max_body_size 80M;
    server_tokens off;

    absolute_redirect  off;
    port_in_redirect   off;

    upstream php {
        server 127.0.0.1:9090;
    }

    #include  "/opt/bitnami/nginx/conf/server_blocks/*.conf";

    # HTTP Server
    server {
        # Port to listen on, can also be set in IP:PORT format
        listen  8080 ssl;
        listen [::]:8080 ssl;
        ssl_certificate     /etc/ssl/certs/xxx.xxx.xxx.crt;
        ssl_certificate_key /etc/ssl/private/xxx.xxx.xxx.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        include  "/etc/nginx/conf.d/*.conf";

        index index.php;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location /status {
            stub_status on;
            access_log   off;
            allow 127.0.0.1;
            allow ::1;
            deny all;
        }

        if (!-e $request_filename) {
            rewrite /wp-admin$ $scheme://$host$uri/ permanent;
            rewrite ^(/[^/]+)?(/wp-.*) $2 last;
            rewrite ^(/[^/]+)?(/.*\.php) $2 last;
        }

        location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php?$args;
        }

        location  /health.php {
            access_log off;
            error_log /dev/stderr error;
            #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
            include fastcgi_params;
            fastcgi_intercept_errors on;
            fastcgi_pass php;
            #The following parameter can be also included in fastcgi_params file
            fastcgi_param  SCRIPT_FILENAME html/$fastcgi_script_name;
        }

        location ~ \.php$ {
            error_log /dev/stderr error;
            #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
            include fastcgi_params;
            fastcgi_intercept_errors on;
            fastcgi_pass php;
            #The following parameter can be also included in fastcgi_params file
            fastcgi_param  SCRIPT_FILENAME html/$fastcgi_script_name;
        }
    }
}